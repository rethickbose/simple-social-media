{"ast":null,"code":"var _jsxFileName = \"/home/rethick/Documents/react/simple-social-media/src/Posts.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Posts.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from './firebase';\nimport firebase from \"firebase\";\n\nconst Posts = ({\n  postId,\n  user,\n  username,\n  caption,\n  imageurl\n}) => {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"posts_avatar\",\n    alt: username,\n    src: \"/static/images/avatar/1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 18\n    }\n  }, username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"posts__image\",\n    src: imageurl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"posts_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 40\n    }\n  }, username), \": \", caption, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, comment.username), comment.text))), user && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post__commentBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post__input\",\n    type: \"text\",\n    placeholder: \"add comment\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post__button\",\n    disabled: !comment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Post\")));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/home/rethick/Documents/react/simple-social-media/src/Posts.js"],"names":["React","useState","useEffect","Avatar","db","firebase","Posts","postId","user","username","caption","imageurl","comments","setComments","comment","setComment","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","postComment","event","preventDefault","add","text","displayName","timestamp","firestore","FieldValue","serverTimestamp","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState,useEffect}from 'react'\nimport './Posts.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from './firebase';\nimport firebase from  \"firebase\";\n\n\n\nconst Posts = ({postId,user,username, caption ,imageurl})=> {\n    \n    const [comments,setComments]= useState([]);\n    const [comment,setComment]= useState('');\n\n    \n    useEffect(() => {\n        let unsubscribe;\n        if(postId){\n\n            unsubscribe=db\n                .collection(\"posts\")\n                .doc(postId)\n                .collection(\"comments\")\n                .orderBy('timestamp','desc')                \n                .onSnapshot((snapshot)=>{\n                    setComments(snapshot.docs.map((doc)=>doc.data()));\n                });\n        }\n\n\n        \n        return () => {\n            unsubscribe();\n        };\n    }, [postId]); \n  \n    const postComment = (event) =>{\n        event.preventDefault();\n\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n            text:comment,\n            username:user.displayName,\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\n        });\n        setComment('');\n\n    }\n  \n  \n  \n  \n    \n    return (\n        <div className=\"posts\">\n           <div className=\"posts_header\"> \n                <Avatar \n                        className=\"posts_avatar\"\n                        alt={username}\n                        src=\"/static/images/avatar/1.jpg\"\n                />\n            \n            \n            \n                 <h3>{username}</h3>\n            </div>\n            \n            \n            <img className=\"posts__image\" src={imageurl} />\n            \n            \n            <h4 className=\"posts_text\"><strong>{username}</strong>: {caption} </h4>\n\n            <div className=\"post__comments\">\n                {\n                    comments.map((comment)=>(\n                        <p>\n                            <strong>{comment.username}</strong>{comment.text}\n                        </p>\n\n                    ))\n                }\n\n\n            </div>\n            \n            \n            {user && (  <form className=\"post__commentBox\">\n                <input\n                 className=\"post__input\"\n                 type=\"text\"\n                 placeholder=\"add comment\"\n                 value={comment}\n                 onChange={(e)=>setComment(e.target.value)}\n\n\n                />\n                <button\n                className=\"post__button\"\n                disabled={!comment}\n                type=\"submit\"\n                onClick={postComment}\n                >Post</button>\n            </form>)}\n            \n          \n       \n       \n       \n       \n       \n       \n       \n       \n        </div>\n    )\n}\n\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}